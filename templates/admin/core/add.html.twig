{% extends 'admin/adbase.html.twig' %}
{% block mainTitle %} Add section {% endblock %}
{% block body %}

    <div class="col-md-9">
                {% for message in app.flashes('added') %}
                    <div class="well">
                        {{ message }}
                    </div>
                {% endfor %}
                {{ form_start(formArticle, {'action': '/admin/add', 'attr': {'class': 'formArticleClass'}}) }}
                <div class="form-group">
                    {{ form_label(formArticle.title, 'Title:')  }}
                    {{ form_errors(formArticle.title) }}
                    {{ form_widget(formArticle.title, {'attr' : {'class': 'form-control'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(formArticle.content, 'Content:')  }}
                    <br/>
                    {{ form_errors(formArticle.content) }}
                    {{ form_widget(formArticle.content, { 'id': 'ckeditor', 'attr': {'class': 'form-control', 'rows': "10", 'cols': '100'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(formArticle.isPublic, 'Is Public:')  }}
                    <br/>
                    {{ form_errors(formArticle.isPublic) }}
                    {{ form_widget(formArticle.isPublic) }}
                </div>

                <div class="form-group">
                    {{ form_label(formArticle.slug, 'Link')  }}
                    {{ form_errors(formArticle.slug) }}
                    {{ form_widget(formArticle.slug, {'attr' : {'class': 'form-control'}}) }}
                </div>

                <!--<div class="form-group">
                    {{ form_label(formArticle.attachment, 'Attachment')  }}
                    {{ form_errors(formArticle.attachment) }}
                    {{ form_widget(formArticle.attachment, {'attr' : {'class': 'form-control'}, 'id': 'damn'}) }}
                </div>-->

                <div>
                    {{ form_widget(formArticle.Publish, {'attr': {'class': 'btn btn-primary'}, 'id': 'ckeditor'} ) }}
                </div>
                {{ form_end(formArticle) }}
    </div>

    <div class="col-md-3">
                {{ form_start(formFile, {'action': '#', 'attr': {'class': 'formFileClass'}}) }}
                 <div class="form-group">
                    {{ form_label(formFile.fileName, 'File attributes are required!')  }}
                    {{ form_errors(formFile.fileName) }}
                    {{ form_widget(formFile.fileName, {'attr' : {'class': 'form-control', 'placeholder': 'Name'}}) }}
                </div>
                <div class="form-group">
                    <!--{{ form_label(formFile.fileType)  }}-->
                    {{ form_errors(formFile.fileType) }}
                    {{ form_widget(formFile.fileType, {'attr' : {'class': 'form-control', 'placeholder': 'Type'}}) }}
                </div>
                <div class="form-group">
                    <!--{{ form_label(formFile.fileDescription)  }}-->
                    {{ form_errors(formFile.fileDescription) }}
                    {{ form_widget(formFile.fileDescription, {'attr' : {'class': 'form-control', 'placeholder': 'Description'}}) }}
                </div>
                <div class="form-group">
                    <!--{{ form_label(formFile.fileDescription)  }}-->
                    {{ form_errors(formFile.file) }}
                    {{ form_widget(formFile.file, {'attr' : {'class': 'form-control inputFile', 'onchange': "previewContent(event)"}}) }}
                </div>
                 <div>
                    {{ form_widget(formFile.Upload, {'attr': {'class': 'btn btn-primary'}, 'id': 'btnUpload'} ) }}
                    <button class="btn btn-danger" type="button" id="resetPreview">Reset</button>
                </div>
                {{ form_end(formFile) }}

                <br/>
                <div id="divPreview" style="display:flex;justify-content:center;align-items:center;"></div>
		</div>
    		
        <script>
            CKEDITOR.replace( 'ckeditor' );
        </script>
        <script>
            function removePre() {
                var fileInputName = document.querySelector('#form_file_fileName');
                var fileInputType = document.querySelector('#form_file_fileType');
                var fileInputDes = document.querySelector('#form_file_fileDescription');
                var img = document.getElementById('imgPreview');
                var btnUpload = document.getElementById('btnUpload');
                var inputFile = document.querySelector('.inputFile');
                inputFile.value = '';
                img.remove();
                btnUpload.classList.remove('disabled');
                fileInputName.value = "";
                fileInputType.value = "";
                fileInputDes.value = "";
            }
        </script>
        <script>
        (function() {
                function getXMLHttpRequest() {
                    var xhr = null; 
                    if (window.XMLHttpRequest || window.ActiveXObject) {
                        if (window.ActiveXObject) {
                            try {
                                xhr = new ActiveXObject("Msxml2.XMLHTTP");
                            } catch(e) {
                                xhr = new ActiveXObject("Microsoft.XMLHTTP");
                            }
                        } else {
                            xhr = new XMLHttpRequest(); 
                        }
                    } else {
                        alert("Votre navigateur ne supporte pas l'objet XMLHTTPRequest...");
                        return null;
                    }
                    return xhr;
                }

                var formFile = document.querySelector('#formFile')

                formFile.addEventListener('submit', function(e) {
                    e.preventDefault();
                    if (document.querySelector('.inputFile').files.length == 0) {
                        alert('Select a file');
                    }
                    else { 
                        var xhr=getXMLHttpRequest();
                        xhr.open('POST', '/admdin/add', true);
                        var btnUpload = document.getElementById('btnUpload');
                        btnUpload.classList.add('disabled');
                        xhr.onreadystatechange = function() {
                            if (this.readyState == 4 && this.status == 200) {
                            	removePre();
                            } else {
                            	removePre();
                            	$.notify("An error occured :(", "error");
                            }
                        };
                        var data = new FormData(formFile);
                        xhr.setRequestHeader('X-Requested-With', 'xmlhttprequest');
                        xhr.send(data);
                    }
                } )
        })();
        </script>
        
        <script>
            var filename;
            var fileInputName = document.querySelector('#form_file_fileName');
            var fileInputType = document.querySelector('#form_file_fileType');
            var fileInputDes = document.querySelector('#form_file_fileDescription');
            function previewContent(event) {
                var reader = new FileReader();
                reader.onload = function() {
                    var img = document.createElement('img');
                    img.setAttribute('id', 'imgPreview');
                    img.classList.add('img-thumbnail')
                    var divPreview = document.getElementById('divPreview');
                    divPreview.append(img);
                    var output = document.getElementById('imgPreview');
                    filename = event.target.files[0].name;
                    imgSrc=checkExt(filename);
                    ext = filename.split(/[.]+/).pop();
                    fileInputName.value = filename;
                    fileInputType.value = ext;
                    fileInputDes.value = "Nothin";
                    if (imgSrc == "nothing") {
                        output.src=reader.result;
                    } else {
                        output.src=imgSrc;
                    }
                    
                    filename = event.target.files[0].name;
                }
                reader.readAsDataURL(event.target.files[0]);
            }

            function checkExt(filename) {
            ext = filename.split(/[.]+/).pop();
            var url;
                switch (ext.toLowerCase()) {
                    case "pdf":
                            url="";
                            break;
                    case "docx":
                            url="";
                            break;
                    default:
                            url="nothing";
                }
                return url;
            }
        </script>
        
        <script>
            var fileInputName = document.querySelector('#form_file_fileName');
            var fileInputType = document.querySelector('#form_file_fileType');
            var fileInputDes = document.querySelector('#form_file_fileDescription');
            var reset = document.querySelector('#resetPreview')
            reset.addEventListener('click', removePre);
            
        </script>

{% endblock %}